#pragma checksum "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "925dfb6d3327f3e3845c03b17cf126c684d5de45"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CreateStory_Index), @"mvc.1.0.view", @"/Views/CreateStory/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CreateStory/Index.cshtml", typeof(AspNetCore.Views_CreateStory_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Document\VSproject\NewCity\NewCity\Views\_ViewImports.cshtml"
using NewCity;

#line default
#line hidden
#line 2 "C:\Document\VSproject\NewCity\NewCity\Views\_ViewImports.cshtml"
using NewCity.Models;

#line default
#line hidden
#line 2 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
using NewCity.Enum;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"925dfb6d3327f3e3845c03b17cf126c684d5de45", @"/Views/CreateStory/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"428dca41bb5514e614701b69b27a8dec3a48fd5f", @"/Views/_ViewImports.cshtml")]
    public class Views_CreateStory_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<NewCity.Models.StoryCard>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/enum.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("target", new global::Microsoft.AspNetCore.Html.HtmlString("fack"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("StoryCard"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Save", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ConditionForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("EffectForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
  
    ViewData["Title"] = "Creator";

#line default
#line hidden
            BeginContext(111, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "846dde1738a64a10aec09dff844fd89f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(147, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(149, 55, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ae0952edceac474ca8afe9b1b6ac0016", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(204, 200, true);
            WriteLiteral("\r\n<!--故事卡包装为树。新建下一故事卡要在故事卡里面建-->\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n\r\n                \r\n        </div>\r\n        <div class=\"col-md-9\">\r\n            ");
            EndContext();
            BeginContext(404, 3424, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "94b03c8841d54c67b1b3923fd73623fa", async() => {
                BeginContext(471, 134, true);
                WriteLiteral("\r\n                <div class=\"row\">\r\n                    <div id=\"StoryId\">\r\n                        <input name=\"storyCard.ID\" hidden");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 605, "\"", 665, 1);
#line 19 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 613, Model.Count() > 0 ? Model.First().ID : Guid.Empty, 613, 52, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(666, 29, true);
                WriteLiteral(" />\r\n                        ");
                EndContext();
                BeginContext(697, 49, false);
#line 20 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                    Write(Model.Count() > 0 ? Model.First().ID : Guid.Empty);

#line default
#line hidden
                EndContext();
                BeginContext(747, 96, true);
                WriteLiteral("\r\n                    </div>\r\n                    <div id=\"StoryName\">\r\n                        ");
                EndContext();
                BeginContext(845, 48, false);
#line 23 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                    Write(Model.Count() > 0 ? Model.First().StoryName : "");

#line default
#line hidden
                EndContext();
                BeginContext(894, 202, true);
                WriteLiteral("\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\" id=\"Img\">\r\n                        <!--img-->\r\n                        ");
                EndContext();
                BeginContext(1098, 42, false);
#line 29 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                    Write(Model.Count() > 0 ? Model.First().IMG : "");

#line default
#line hidden
                EndContext();
                BeginContext(1141, 211, true);
                WriteLiteral("\r\n                    </div>\r\n                    <div class=\"col-md-8\" id=\"Content\">\r\n                        <!--text-->\r\n                        <textarea name=\"storyCard.Text\" class=\"form-control\" rows=\"10\">");
                EndContext();
                BeginContext(1354, 43, false);
#line 33 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                                                                                   Write(Model.Count() > 0 ? Model.First().Text : "");

#line default
#line hidden
                EndContext();
                BeginContext(1398, 112, true);
                WriteLiteral("</textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" id=\"Option\">\r\n");
                EndContext();
#line 37 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                     if (Model.Count() != 0)
                    {

#line default
#line hidden
                BeginContext(1579, 66, true);
                WriteLiteral("                        <input hidden id=\"optionCount\" type=\"text\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 1645, "\"", 1725, 1);
#line 39 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 1653, Model.First().StoryOptions!=null?Model.First().StoryOptions.Count():0, 1653, 72, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1726, 5, true);
                WriteLiteral(" />\r\n");
                EndContext();
#line 40 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                        int i = 0; //计算当前是第几个选项
                        

#line default
#line hidden
#line 41 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                         if (Model.First().StoryOptions != null)
                        {
                            

#line default
#line hidden
#line 43 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                             foreach (var item in Model.First().StoryOptions)
                            {

#line default
#line hidden
                BeginContext(1983, 48, true);
                WriteLiteral("                                <div class=\"row\"");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 2031, "\"", 2051, 2);
                WriteAttributeValue("", 2036, "option-", 2036, 7, true);
#line 45 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2043, item.ID, 2043, 8, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2052, 45, true);
                WriteLiteral(">\r\n                                    <input");
                EndContext();
                BeginWriteAttribute("name", " name=\"", 2097, "\"", 2133, 3);
                WriteAttributeValue("", 2104, "storyCard.StoryOptions[", 2104, 23, true);
#line 46 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2127, i, 2127, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 2129, "].ID", 2129, 4, true);
                EndWriteAttribute();
                BeginContext(2134, 19, true);
                WriteLiteral(" hidden type=\"text\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 2153, "\"", 2169, 1);
#line 46 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2161, item.ID, 2161, 8, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2170, 64, true);
                WriteLiteral(" />\r\n\r\n                                    <button type=\"button\"");
                EndContext();
                BeginWriteAttribute("onclick", " onclick=\"", 2234, "\"", 2259, 3);
                WriteAttributeValue("", 2244, "Condition(\'", 2244, 11, true);
#line 48 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2255, i, 2255, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 2257, "\')", 2257, 2, true);
                EndWriteAttribute();
                BeginContext(2260, 56, true);
                WriteLiteral(">条件</button>\r\n                                    <input");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 2316, "\"", 2357, 3);
                WriteAttributeValue("", 2321, "storyCard.StoryOptions[", 2321, 23, true);
#line 49 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2344, i, 2344, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 2346, "].Condition", 2346, 11, true);
                EndWriteAttribute();
                BeginWriteAttribute("name", " name=\"", 2358, "\"", 2401, 3);
                WriteAttributeValue("", 2365, "storyCard.StoryOptions[", 2365, 23, true);
#line 49 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2388, i, 2388, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 2390, "].Condition", 2390, 11, true);
                EndWriteAttribute();
                BeginContext(2402, 19, true);
                WriteLiteral(" hidden type=\"text\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 2421, "\"", 2446, 1);
#line 49 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2429, item.Condition, 2429, 17, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2447, 49, true);
                WriteLiteral(" />\r\n\r\n                                    <input");
                EndContext();
                BeginWriteAttribute("name", " name=\"", 2496, "\"", 2534, 3);
                WriteAttributeValue("", 2503, "storyCard.StoryOptions[", 2503, 23, true);
#line 51 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2526, i, 2526, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 2528, "].Text", 2528, 6, true);
                EndWriteAttribute();
                BeginContext(2535, 12, true);
                WriteLiteral(" type=\"text\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 2547, "\"", 2565, 1);
#line 51 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2555, item.Text, 2555, 10, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2566, 62, true);
                WriteLiteral(">\r\n\r\n                                    <button type=\"button\"");
                EndContext();
                BeginWriteAttribute("onclick", " onclick=\"", 2628, "\"", 2650, 3);
                WriteAttributeValue("", 2638, "Effect(\'", 2638, 8, true);
#line 53 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2646, i, 2646, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 2648, "\')", 2648, 2, true);
                EndWriteAttribute();
                BeginContext(2651, 56, true);
                WriteLiteral(">效果</button>\r\n                                    <input");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 2707, "\"", 2745, 3);
                WriteAttributeValue("", 2712, "storyCard.StoryOptions[", 2712, 23, true);
#line 54 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2735, i, 2735, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 2737, "].Effect", 2737, 8, true);
                EndWriteAttribute();
                BeginWriteAttribute("name", " name=\"", 2746, "\"", 2786, 3);
                WriteAttributeValue("", 2753, "storyCard.StoryOptions[", 2753, 23, true);
#line 54 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2776, i, 2776, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 2778, "].Effect", 2778, 8, true);
                EndWriteAttribute();
                BeginContext(2787, 19, true);
                WriteLiteral(" hidden type=\"text\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 2806, "\"", 2828, 1);
#line 54 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2814, item.Effect, 2814, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2829, 64, true);
                WriteLiteral(" />\r\n\r\n                                    <button type=\"button\"");
                EndContext();
                BeginWriteAttribute("onclick", " onclick=\"", 2893, "\"", 2928, 3);
                WriteAttributeValue("", 2903, "Cancel(\'option-", 2903, 15, true);
#line 56 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 2918, item.ID, 2918, 8, false);

#line default
#line hidden
                WriteAttributeValue("", 2926, "\')", 2926, 2, true);
                EndWriteAttribute();
                BeginContext(2929, 73, true);
                WriteLiteral(">取消</button>\r\n\r\n                                    <button type=\"button\"");
                EndContext();
                BeginWriteAttribute("onclick", " onclick=\"", 3002, "\"", 3068, 7);
                WriteAttributeValue("", 3012, "NextCard(\'", 3012, 10, true);
#line 58 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 3022, i, 3022, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 3024, "\',\'", 3024, 3, true);
#line 58 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 3027, Model.First().StorySeriesID, 3027, 28, false);

#line default
#line hidden
                WriteAttributeValue("", 3055, "\',\'", 3055, 3, true);
#line 58 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 3058, item.ID, 3058, 8, false);

#line default
#line hidden
                WriteAttributeValue("", 3066, "\')", 3066, 2, true);
                EndWriteAttribute();
                BeginContext(3069, 55, true);
                WriteLiteral(">→</button>\r\n                                    <input");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 3124, "\"", 3171, 3);
                WriteAttributeValue("", 3129, "storyCard.StoryOptions[", 3129, 23, true);
#line 59 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 3152, i, 3152, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 3154, "].NextStoryCardID", 3154, 17, true);
                EndWriteAttribute();
                BeginWriteAttribute("name", " name=\"", 3172, "\"", 3221, 3);
                WriteAttributeValue("", 3179, "storyCard.StoryOptions[", 3179, 23, true);
#line 59 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 3202, i, 3202, 2, false);

#line default
#line hidden
                WriteAttributeValue("", 3204, "].NextStoryCardID", 3204, 17, true);
                EndWriteAttribute();
                BeginContext(3222, 35, true);
                WriteLiteral(" type=\"text\" placeholder=\"为空则新建故事卡\"");
                EndContext();
                BeginWriteAttribute("value", " value=\"", 3257, "\"", 3326, 1);
#line 59 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
WriteAttributeValue("", 3265, item.NextStoryCardID==null?Guid.Empty:item.NextStoryCardID, 3265, 61, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(3327, 43, true);
                WriteLiteral(">\r\n                                </div>\r\n");
                EndContext();
#line 61 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                                i++;
                            }

#line default
#line hidden
#line 62 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                             
                        }

#line default
#line hidden
#line 63 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                         

                    }

#line default
#line hidden
                BeginContext(3491, 330, true);
                WriteLiteral(@"

                </div>
                <div class=""form-group"">
                    <button type=""button"" onclick=""AddOption()"">增加选项</button>
                </div>
                <div class=""form-group"">
                    <button type=""submit"" id=""submit"" class=""btn"">保存</button>
                </div>
            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3828, 534, true);
            WriteLiteral(@"
            <iframe name=""fack"" id=""fack"" hidden></iframe>
        </div>
    </div>
</div>



<!--条件模态框-->
<div id=""ConditionModel"" class=""modal fade"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                <h4 class=""modal-title"" id=""myModalLabel"">模态框（Modal）标题</h4>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(4362, 32, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "be718da1f91344e69aa3a95abd17075f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4394, 611, true);
            WriteLiteral(@"
                <button onclick=""AddCondition()"">+</button>
                <button onclick=""SaveCondition()"">确定</button>
            </div>
        </div>
    </div>
</div>

<!--效果模态框-->
<div id=""EffectModel"" class=""modal fade"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                <h4 class=""modal-title"" id=""myModalLabel"">模态框（Modal）标题</h4>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(5005, 29, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "440f669161be4ba492c1e180fadfd625", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5034, 5860, true);
            WriteLiteral(@"
                <button onclick=""AddEffect()"">+</button>
                <button onclick=""SaveEffect()"">确定</button>
            </div>
        </div>
    </div>
</div>

<!--下一张卡片模态框-->
<div id=""NextCardModel"" class=""modal fade"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                <h4 class=""modal-title"" id=""myModalLabel"">模态框（Modal）标题</h4>
            </div>
            <div class=""modal-body"">
                
            </div>
        </div>
    </div>
</div>

<script>

    function GetStoryCard() {
        //点击树加载该故事卡到主页面

    }

    //form 返回的消息容器
    $(""#fack"").on('load', function () {
        let a = window.frames[""fack""].document.body.innerText;
        if (a != '') {
            alert(a);
            window.location.reload();
        }
    });

    //取消选项
    function Cancel(optionid) ");
            WriteLiteral(@"{
        $(""#"" + optionid).remove();
    }


    //下一张卡
    function NextCard(id, seriesid, optionid) {
        let nextid = document.getElementById(""storyCard.StoryOptions[""+id+""].NextStoryCardID"").value;

        if (confirm(""即将移动到新的页面，请确认已保存"")) {
            $.post(""/CreateStory/NextCard"", { nextid: nextid, seriesid: seriesid, optionid: optionid }, function (data) {
                LoadNextCard(data);
            });
        }
    }

    //加载下一张卡
    function LoadNextCard(data) {
        debugger;
        //清空显示
        $(""#StoryId"").empty();
        $(""#StoryName"").empty();
        $(""#Img"").empty();
        $(""#Content"").empty();
        $(""#Option"").empty();

        //加载基本数据
        debugger;
        let id = data.id;
        let name = data.storyName == """" || data.storyName == null ? """" : data.storyName;
        let img = data.img == """" || data.img == null ? """" : data.img;
        let text = data.text == """" || data.text == null ? """" : data.text;


        let StoryId");
            WriteLiteral(@" = ""<input name='storyCard.ID' hidden value='' />"";
        StoryId += ""<p>"" + id + ""</p>"";
        let StoryName = ""<p>""+ name +""</p>"";
        let Img = ""<p>"" + img+""</p>"";
        let Content = ""<textarea name='storyCard.Text' class='form-control' rows='10' >"" + text +""</textarea>"";
        let Option = """";
        //计算当前是第几个选项
        let count = data.storyOptions != null ? data.storyOptions.length : 0;
        Option += ""<input hidden id='optionCount' type='text' value='"" + count +""' />"";
        for (let i in data.storyOptions) {
            let option = """";
            let id = data.storyOptions[i].id;
            let condition = data.storyOptions[i].condition == """" || data.storyOptions[i].condition == null ? """" : data.storyOptions[i].condition;
            let text = data.storyOptions[i].text == """" || data.storyOptions[i].text == null ? """" : data.storyOptions[i].text;
            let effect = data.storyOptions[i].effect == """" || data.storyOptions[i].effect == null ? """" : data.storyOption");
            WriteLiteral(@"s[i].effect;
            let storySeriesID = data.storySeriesID;
            let NextStoryCardID = data.storyOptions[i].nextStoryCardID == """" ? GuidEmpty : data.storyOptions[i].nextStoryCardID

            option += ""<input name='storyCard.StoryOptions[""+i+""].ID' hidden type='text value="" + id+"" />"";
            option += ""<button type='button' onclick='Condition("" + i +"")'>条件</button>"";
            option += ""<input id='storyCard.StoryOptions["" + i + ""].Condition' name='storyCard.StoryOptions["" + i +""].Condition' hidden type='text' value="" + condition+"" />"";
            option += ""<input name='storyCard.StoryOptions["" + i +""].Text' type='text' value="" + text+"">""
            option += ""<button type='button' onclick='Effect("" + i +"")'>效果</button>""
            option += ""<input id='storyCard.StoryOptions["" + i + ""].Effect' name='storyCard.StoryOptions["" + i +""].Effect' hidden type='text' value="" + effect +"" />""
            option += "" <button type='button' onclick='Cancel('option-"" + id+""')'>取消</butto");
            WriteLiteral(@"n>""
            option += ""<button type='button' onclick=NextCard('"" + i + ""','"" + storySeriesID+""','"" + id + ""')>→</button>""

            
            option += ""<input id='storyCard.StoryOptions["" + i + ""].NextStoryCardID' name='storyCard.StoryOptions["" + i +""].NextStoryCardID' type='text' placeholder='为空则新建故事卡' value='""+NextStoryCardID+""'>""

            Option += ""<div class='row' id='option-"" + id+""'>"" + option+""</div>"";
        }
        //赋值
        $(""#StoryId"").append(StoryId);
        $(""#StoryName"").append(StoryName);
        $(""#Img"").append(Img);
        $(""#Content"").append(Content);
        $(""#Option"").append(Option);

    }

    //增加选项
    function AddOption() {
        let optioncount = $(""#optionCount"").val();  //选项计数
        if (!optioncount) {
            optioncount = 0;
        }
        let id = guid();
        let optionID = ""<input hidden type='text' name='storyCard.StoryOptions["" + optioncount + ""].ID' value='"" + id + ""' />"";
        let condition = ""<button ");
            WriteLiteral(@"type='button' onclick='Condition("" + optioncount + "")'>条件</button> <input hidden id='storyCard.StoryOptions["" + optioncount + ""].Condition' name='storyCard.StoryOptions["" + optioncount + ""].Condition' type='text' value='' />"";
        let text = ""<input type='text' name='storyCard.StoryOptions["" + optioncount + ""].Text' value=''>"";
        let effect = "" <button type='button' onclick='Effect("" + optioncount + "")'>效果</button> <input id='storyCard.StoryOptions["" + optioncount + ""].Effect' name='storyCard.StoryOptions["" + optioncount + ""].Effect' hidden type='text' value='' />"";
        let cancel = "" <button type='button' onclick=Cancel('option-"" + id + ""')>取消</button> <button type='button' onclick='NextCard('"" + optioncount+""','");
            EndContext();
            BeginContext(10895, 27, false);
#line 235 "C:\Document\VSproject\NewCity\NewCity\Views\CreateStory\Index.cshtml"
                                                                                                                                                     Write(Model.First().StorySeriesID);

#line default
#line hidden
            EndContext();
            BeginContext(10922, 8302, true);
            WriteLiteral(@"','"" + id+""')'>→</button>"";
        let nextcard = ""<input id='storyCard.StoryOptions["" + optioncount + ""].NextStoryCardID' name='storyCard.StoryOptions["" + optioncount + ""].NextStoryCardID' type='text' >"";
        let toappend = ""<div class='row' id=option-"" + id + "">"" + optionID + condition + text + effect + cancel + nextcard + ""</div>""
        $(""#Option"").append(toappend)
        $(""#optionCount"").val(optioncount);
        optioncount++;
    }

    //设置条件
    var conditioncount = 0; //当前页面有多少个条件
    function Condition(number) {
        //清空条件模态框
        var ConditionForm = document.getElementById(""ConditionForm"");
        ConditionForm.innerHTML = """";
        conditioncount = 0;
        let q = ""<input hidden type='text' id='ConditionId' value='"" + number + ""'/>"";
        $(""#ConditionForm"").append(q);
        let Cd = document.getElementById(""storyCard.StoryOptions["" + number + ""].Condition"").value;
        if (Cd) {
            let condition = JSON.parse(Cd);

            for (let i");
            WriteLiteral(@" in condition) {
                let Hide = ""<input  type='text'  name='StorySeries' value='1' style='display: none;'/>"";
                let Name = ""<input  type='text' name='Name' id='cd-storyStates["" + i + ""].Name'/>"";
                let Type = ""<select  name='Type' id='cd-storyStates["" + i + ""].Type'>""
                    + ""<option value='1'>></option>""
                    + ""<option value='2'><</option>""
                    + ""<option value='3'>=</option>""
                    + ""<option value='4'>≠</option>""
                    + ""</select>"";
                let Value = ""<input  type='text' name='Value' id='cd-storyStates["" + i + ""].Value'/>"";
                let Delete = ""<button onclick='ConditionCancel("" + i + "")'>取消</button>"";
                let context = Hide+Name + Type + Value + Delete;
                let toappend = ""<div class='row' id='condition"" + i + ""'>"" + context + ""</div>""
                $(""#ConditionForm"").append(toappend)
                conditioncount++;
             ");
            WriteLiteral(@"   //赋值

                document.getElementById(""cd-storyStates["" + i + ""].Name"").value = condition[i][""Name""];
                document.getElementById(""cd-storyStates["" + i + ""].Type"").text = enumConditionType[condition[i][""Type""]];
                document.getElementById(""cd-storyStates["" + i + ""].Type"").value = condition[i][""Type""];
                document.getElementById(""cd-storyStates["" + i + ""].Value"").value = condition[i][""Value""];

            }
        }

        $('#ConditionModel').modal('show');

    }

    //取消条件
    function ConditionCancel(conditionID) {
        $(""#condition"" + conditionID + """").remove();
        conditioncount--;
    }

    function SaveCondition() {
        let i = $(""#ConditionId"").val();
        //let value = $(""#ConditionForm"").serialize();
        let value = FormtoJson($(""#ConditionForm""));

        document.getElementById(""storyCard.StoryOptions["" + i + ""].Condition"").value = value;
        $(""#ConditionModel"").modal('hide')
    }

    //");
            WriteLiteral(@"增加条件
    function AddCondition() {
        let i = conditioncount;
        let Hide = ""<input  type='text'  name='StorySeries' value='1' style='display: none;'/>"";
        let Name = ""<input  type='text'  name='Name' id='cd-storyStates["" + i + ""].Name'/>"";
        let Type = ""<select  name='Type' id='cd-storyStates["" + i + ""].Type'>""
            + ""<option value='1'>></option>""
            + ""<option value='2'><</option>""
            + ""<option value='3'>=</option>""
            + ""<option value='4'>≠</option>""
            + ""</select>"";
        let Value = ""<input  type='text' name='Value' id='cd-storyStates["" + i + ""].Value'/>"";
        let Delete = ""<button onclick='ConditionCancel("" + i + "")'>取消</button>"";
        let context = Hide+Name + Type + Value + Delete;
        let toappend = ""<div class='row' id='condition"" + i + ""'>"" + context + ""</div>""
        $(""#ConditionForm"").append(toappend)
        conditioncount++;
    }

    //设置效果
    var effectcount = 0; //当前页面有多少个条件
    function");
            WriteLiteral(@" Effect(number) {
        var EffectForm = document.getElementById(""EffectForm"");
        EffectForm.innerHTML = """";
        effectcount = 0;
        let q = ""<input hidden type='text' id='EffectId' value='"" + number + ""'/>"";
        $(""#EffectForm"").append(q);
        //let effect = JSON.parse($(""#storyCard.StoryOptions["" + number + ""].Effect"").val());
        debugger;
        let ef = document.getElementById(""storyCard.StoryOptions["" + number + ""].Effect"").value;
        if (ef && ef!='/') {
            let effect = JSON.parse(ef);

            for (let i in effect) {
                let Hide = ""<input  type='text'  name='StorySeries' value='1' style='display: none;'/>"";
                let Name = ""<input  type='text' name='Name' id='ef-storyStates["" + i + ""].Name'/>"";
                let Type = ""<select  name='Type' id='ef-storyStates["" + i + ""].Type'>""
                    + ""<option value='0'>增加</option>""
                    + ""<option value='1'>减少</option>""
                    + ""<opti");
            WriteLiteral(@"on value='2'>赋值</option>""
                    + ""</select>"";
                let Value = ""<input  type='text' name='Value' id='ef-storyStates["" + i + ""].Value'/>"";
                let Delete = ""<button onclick='EffectCancel("" + i + "")'>取消</button>"";
                let context = Hide + Name + Type + Value + Delete;
                let toappend = ""<div class='row' id='effect"" + i + ""'>"" + context + ""</div>""
                $(""#EffectForm"").append(toappend)
                effectcount++;
                //赋值
                debugger;
                document.getElementById(""ef-storyStates["" + i + ""].Name"").value = effect[i][""Name""];
                document.getElementById(""ef-storyStates["" + i + ""].Type"").text = enumEffectType[effect[i][""Type""]];
                document.getElementById(""ef-storyStates["" + i + ""].Type"").value = effect[i][""Type""];
                document.getElementById(""ef-storyStates["" + i + ""].Value"").value = effect[i][""Value""];

            }
        }

        $('#EffectMod");
            WriteLiteral(@"el').modal('show');
    }

    function EffectCancel(num) {
        $(""#effect"" + num + """").remove();
        effectcount--;
    }
    //增加效果
    function AddEffect() {
        let i = effectcount;
        let Hide = ""<input  type='text'  name='StorySeries' value='1' style='display: none;'/>"";
        let Name = ""<input  type='text'  name='Name' id='ef-storyStates["" + i + ""].Name'/>"";
        let Type = ""<select  name='Type' id='ef-storyStates["" + i + ""].Type'>""
            + ""<option value='0'>增加</option>""
            + ""<option value='1'>减少</option>""
            + ""<option value='2'>赋值</option>""
            + ""</select>"";
        let Value = ""<input  type='text' name='Value' id='ef-storyStates["" + i + ""].Value'/>"";
        let Delete = ""<button onclick='EffectCancel("" + i + "")'>取消</button>"";
        let context = Hide + Name + Type + Value + Delete;
        let toappend = ""<div class='row' id='effect"" + i + ""'>"" + context + ""</div>""
        $(""#EffectForm"").append(toappend)
        eff");
            WriteLiteral(@"ectcount++;
    }
    //保存效果
    function SaveEffect() {
        let i = $(""#EffectId"").val();
        //let value = $(""#ConditionForm"").serialize();
        let value = FormtoJson($(""#EffectForm""));

        document.getElementById(""storyCard.StoryOptions["" + i + ""].Effect"").value = value;
        $(""#EffectModel"").modal('hide')
    }

    //生成uuid
    function S4() {
        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
    }
    function guid() {
        return (S4() + S4() + ""-"" + S4() + ""-"" + S4() + ""-"" + S4() + ""-"" + S4() + S4() + S4());
    }

    function FormtoJson(form) {
        let a = form.serializeArray();

        let result = new Array();
        for (let i = 0,j = 0 ; i < a.length-1; i += 4,j++) {
            let temp = {};
            temp[a[i].name] = a[i].value;
            
            temp[a[i + 1].name] = a[i + 1].value;
          
            temp[a[i + 2].name] = a[i + 2].value;

            temp[a[i + 3].name] = a[i + 3].value");
            WriteLiteral(";\r\n\r\n            result.push(temp);\r\n        }\r\n        return JSON.stringify(result);\r\n    }\r\n\r\n</script>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<NewCity.Models.StoryCard>> Html { get; private set; }
    }
}
#pragma warning restore 1591
