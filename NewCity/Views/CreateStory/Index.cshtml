@model IEnumerable<NewCity.Models.StoryCard>
@using NewCity.Enum;
@{
    ViewData["Title"] = "Creator";
    EnumConditionType enumConditionType = new EnumConditionType();
}
<script src="~/js/enum.js"></script>
<!--故事卡包装为树。新建下一故事卡要在故事卡里面建-->
<div class="container-fluid">
    <div class="row">
        <div class="col-md-4">tree</div>
        <div class="col-md-8">
            <form id="StoryCard">
                <div class="row">
                    <div id="StoryId">
                        @(Model.Count() > 0 ? Model.First().ID : Guid.Empty)
                    </div>
                    <div id="StoryName">
                        @(Model.Count() > 0 ? Model.First().StoryName : "")
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4" id="Img">
                        <!--img-->
                        @(Model.Count() > 0 ? Model.First().IMG : "")
                    </div>
                    <div class="col-md-8" id="Content">
                        <!--text-->
                        <textarea class="form-control" rows="10">@(Model.Count() > 0 ? Model.First().Text : "")</textarea>
                    </div>
                </div>
                <div class="row" id="Option">
                    @if (Model.Count() != 0)
                    {
                        <input hidden id="optionCount" type="text" value="@Model.Count()" />
                        @foreach (var item in Model.First().StoryOptions)
                        {
                            <div class="row" id="@item.ID">
                                <input hidden type="text" value="@item.ID" />

                                <button type="button" onclick="Condition('@item.ID')">条件</button>
                                <input hidden type="text" value="@item.Condition" />

                                <input type="text" value="@item.Text">

                                <button type="button" onclick="Effect('@item.ID')">效果</button>
                                <input hidden type="text" value="@item.Effect" />

                                <button type="button" onclick="Cancel()">取消</button>
                                <button type="button" onclick="NextCard('@item.ID')">→</button>
                            </div>
                        }
                    }

                    <button type="button" onclick="AddOption()">增加选项</button>foreach
                </div>
            </form>
            <div class="row">
                <button type="button" class="btn" onclick="Save()">保存</button>
            </div>
        </div>
    </div>
</div>



<!--条件模态框-->
<div id="Condition" class="modal fade">
    <form id="Condition-form" asp-action="">

        <button type="submit">保存</button>
    </form>
    <button onclick="AddCondition()">+</button>
</div>

<script>
    $(document).ready(function () {
        //返回第一个故事卡到主页面
        //加载树
    })


    function GetStoryCard() {
        //点击树加载该故事卡到主页面
        
    }

    function Save() {
        let storyCard = $('#StoryCard').serialize();
        //等待动画
        $.post("/CreateStoryController/Save", { storyCard: storyCard}, function (data) {

        })
    }

    //取消选项
    function Cancel(optionID) {

    }

    //下一张卡
    function NextCard(optionid) {

    }

    //增加选项
    var 
    function AddOption() {
        let optioncount = $("#optionCount").val()++;  //选项计数
        let guid = guid();

        let optionID = "<input hidden type='text' name='StoryOptions[" + optioncount +"].ID' value="+guid+" />";
        let condition = "<button type='button' onclick='Condition(" + guid +")'>条件</button><input hidden type='text' value='' />";
        let text = "<input type='text' value=''>";
        let Effect = "<button type='button' onclick='Effect(" + guid +")'>效果</button><input hidden type='text' value='' />";
        let button = " <button type='button' onclick='Cancel()'>取消</button><button type='button' onclick='NextCard('')'>→</button>";

        let toappend = "<div class='row' id=" + guid +">" + optionID + condition + text + Effect + button + "</div>"
        $("#Option").append(toappend)
        $("#optionCount").val(optioncount);
    }

    //设置条件
    function Condition(optionid) {
        //加载模态款数据
        //出现模态框
        //选择条件类型 人物参数/故事状态 参数 < > = trul false 123456789 10 json[{name=speed,条件=大于,value=6}]
        //保存 添加到list
        //保存数据库
        $.post("/CreateStoryController/GetCondition", { optionid: optionid }, function (data) {
            let json = JSON.parse(data);
            if (json) {
                for (let i in json) {
                    let StorySeries = "<input hidden type='text' name='storyStates[" + i + "].StorySeries' id='storyStates[" + i + "].StorySeries'/>";
                    let Name = "<input readonly type='text' name='storyStates[" + i + "].Name' id='storyStates[" + i +"].Name'/>";
                    let Type = "<select disabled name='storyStates[" + i + "].Type' id='storyStates[" + i +"].Type'>" +
                        + "<option value='1'>></option>"
                        + "<option value='2'><</option>"
                        + "<option value='3'>=</option>"
                        + "<option value='4'>≠</option>"
                        + "</select>";
                    let Value = "<input readonly type='text' name='storyStates[" + i + "].Value' id='storyStates[" + i + "].Value'/>";
                    let Edit = "<div  id='EditCondition" + i +"' onclick='EditCondition(" + i + ")'>编辑</div>";
                    let Save = "<div hidden id='SaveCondition"+i+"' style='display:none' onclick='SaveCondition(" + i + ")'>保存</div>";
                    let Delete = "<div onclick='ConditionCancel(" + i + ")'>取消</div>";

                    toappend = Name + Type + Value + Save + Edit+Delete + StorySeries;
                    let toappend = "<div class='row' id='condition"+i+"'>" + context + "</div>"
                    $("#Condition-form").append(toappend)

                    //赋值
                    $("#storyStates[" + i +"].Name").val(json[i].Name);
                    $("#storyStates[" + i +"].Type").text(enumConditionType[json[i].Type]);
                    $("#storyStates[" + i + "].Type").val(json[i].Type);
                    $("#storyStates[" + i + "].Value").val(json[i].Value);
                    $("#storyStates[" + i + "].Value").val(json[i].StorySeries);
                }

            }
        })
        $('#Condition').modal('show');

    }


    //编辑条件
    function EditCondition(conditionID) {
        $("#storyStates[" + conditionID + "].Type").removeAttr("disabled");
        $("#storyStates[" + conditionID + "].Type").removeAttr("readonly");
        $("#storyStates[" + conditionID + "].Type").removeAttr("readonly");
        $('#SaveCondition' + i).show()
        $('#EditCondition' + i).hidden();
    }


    //取消条件
    function ConditionCancel(conditionID) {
        $("#condition" + conditionID + "").remove();
    }

    function SaveCondition(optionID) {
        
    }

    //增加条件
    function AddCondition() {

    }

    //设置效果
    function Effect(optionID) {

    }

    
    //生成uuid
    function S4() {
        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
    }
    function guid() {
        return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());
    }

</script>

