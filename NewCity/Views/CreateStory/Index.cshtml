@model IEnumerable<NewCity.Models.StoryCard>
@{ 
    StoryCard LastStoryCard = ViewBag.LastCard as StoryCard;
}
<script src="~/js/enum.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<!--故事卡包装为树。新建下一故事卡要在故事卡里面建-->
<div class="container-fluid">
    <div class="btn" onclick="ReturnTree('@LastStoryCard.StorySeriesID')">返回到树</div>
    <div class="row">
        @*<div class="col-md-3">

          </div>*@
        <div class="col-md-9">
            <div class="row">
                <div id="StoryId">

                </div>
                <div id="StoryName">

                </div>
            </div>
            <div class="row">
                <div class="col-md-4" id="Img">

                </div>
                <div class="col-md-8" id="Content">

                </div>
            </div>
            <div class="row" id="Option">

            </div>
            <div class="form-group">
                <button type="button" onclick="AddOption()">增加选项</button>
            </div>
            <div class="form-group">
                <form asp-action="Save">
                    <input name="json" id="json" Hidden />
                    <button type="submit" onclick="SaveCard()">保存</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!--条件模态框-->
<div id="ConditionModel" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">模态框（Modal）标题</h4>
            </div>
            <div class="modal-body">
                <div id="Condition"></div>
                <div id="Conditionoperation"></div>
            </div>
        </div>
    </div>
</div>

<!--效果模态框-->
<div id="EffectModel" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">模态框（Modal）标题</h4>
            </div>
            <div class="modal-body">
                <div id="Effect"></div>
                <div id="Effectoperation"></div>
            </div>
        </div>
    </div>
</div>

<!--下一张卡片模态框-->
<div id="NextCardModel" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">模态框（Modal）标题</h4>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>

<script>
    //将来自控制器的故事卡转换为js对象,并显示到页面
    var CardObj;

    $(function () {
        debugger;
        Serialize()

        CreaterView(CardObj)
    });

    /////////////////////////主界面
    //根据输入的卡片构建主界面
    function CreaterView(card) {
        EmptyView()

        $("#StoryId").append(card.id)
        $("#StoryName").append(card.storyName)  
        $("#Img").append(card.img)
        $("#Content").append(card.text)
        $("#BackgroundIMG").append(card.backgroundIMG)

        if (card.storyOptions) {
            for (let i = 0; i < card.storyOptions.length; i++) {
                CreateOption(i);
            }
        }
    }
    function CreateOption(i) {
        let option = "";
        option += "<div id='"+ i +"'>"
        option += i + 1 + "."
        option += "<button type='button' onclick='CreateCondition(" + i + ")'>条件</button>"

        option += "<input id=option" + i + " value='" + CardObj.storyOptions[i].text + "' />"
        option += "<button type='button' onclick='CreateEffect(" + i + ")'>效果</button>"
        option += "<button type='button' onclick='Cancel(" + i + ")'>取消</button>"
        option += "<button type='button' onclick=NextCard(" + i + ")>→</button>"
        option += "</div>"

        $("#Option").append(option)
    }
    function EmptyView()
    {
        $("#StoryId").empty()
        $("#StoryName").empty()
        $("#Img").empty()
        $("#Content").empty()
        $("#BackgroundIMG").empty()

    }
    //取消选项
    function Cancel(optionid) {

        $("#" + optionid).remove();
        CardObj.storyOptions.splice(optionid,1)
    }
    //增加选项
    function AddOption() {
        let option = {
            condition: [],
            effect: [],
            id: guid(),
            nextStoryCardID: emptyguid,
            storyCardID: CardObj.id,
            text: ""
        };
        CardObj.storyOptions.push(option);
        CreateOption(CardObj.storyOptions.length-1)
    }
    function SaveCard() {
        debugger;
        for (let i = 0; i < CardObj.storyOptions.length; i++) {
            //保存选项文本
            CardObj.storyOptions[i].text = $("#option" + i).val();

            //文本化条件
            CardObj.storyOptions[i].condition = JSON.stringify(CardObj.storyOptions[i].condition);
            //文本化效果
            CardObj.storyOptions[i].effect = JSON.stringify(CardObj.storyOptions[i].effect);
        }
        let json = JSON.stringify(CardObj);

        $("#json").val(json);
    }

    //返回到树界面
    function ReturnTree(storySeriesID) {
        debugger;
        window.location.href = '/CreateStory/ReturnTree?StorySeriesID=' + storySeriesID
    }

    //前进到下一卡片
    function NextCard(optionid) {
        window.location.href = '/CreateStory/NextCard/' + CardObj.storyOptions[optionid].id
    }

    //序列化对象
    function Serialize(data) {
        CardObj = JSON.parse(data)

        SerializeOption();
    }
    function Serialize() {
        CardObj = @Json.Serialize(LastStoryCard);

        SerializeOption();
    }
    function SerializeOption() {
        if (CardObj.storyOptions != null) {
            for (let i = 0; i < CardObj.storyOptions.length; i++) {
                CardObj.storyOptions[i].condition = JSON.parse(CardObj.storyOptions[i].condition);
                CardObj.storyOptions[i].effect = JSON.parse(CardObj.storyOptions[i].effect);
            }
        }
        else {
            CardObj.storyOptions = new Array();
        }
        
    }


    ///////////////////////////////end

    ////////////////////////////////条件
    //设置条件
    function CreateCondition(i) {
        EmptyCondition();

        for (let j = 0; j < CardObj.storyOptions[i].condition.length; j++) {
            Condition(j,i);
        }
        let string = "<button onclick='AddCondition(" + i + ")'>+</button><button onclick = 'SaveCondition(" + i + ")' > 确定</button>";
        $('#Conditionoperation').append(string);

        $('#ConditionModel').modal('show');
    }

    //添加条件
    function AddCondition(storyoption) {
        Condition(CardObj.storyOptions[storyoption].condition.length, storyoption)
    }

    //条件保存
    function SaveCondition(storyoption) {
        let condition = [];
        $(".conditionname").each(function () {
            let c = {
                Name: $(this).val(),
                Type : "",
                Value : ""
            }
            condition.push(c);

        })
        $(".conditionvalue").each(function (i) {
            condition[i].Value = $(this).val();
        })
        $(".conditionidselect").each(function (i) {
            condition[i].Type = $(this).val();
        })
        CardObj.storyOptions[storyoption].condition = condition;

        $('#ConditionModel').modal('hide');
    }

    function Condition(condition, storyoption) {
        let name =  "";
        let value =  "";
        let type = "";

        if (CardObj.storyOptions[storyoption].condition.length >= condition + 1) {
            name = CardObj.storyOptions[storyoption].condition[condition].Name
            value = CardObj.storyOptions[storyoption].condition[condition].Value
            type = CardObj.storyOptions[storyoption].condition[condition].Type
        }
        let context =
            "<div id='conditionid" + condition +"'>"+
            "<input class='conditionname' value='" + name + "'/>" +
            "<select class='conditionidselect'>"
            + "<option value='1'>></option>"
            + "<option value='2'><</option>"
            + "<option value='3'>=</option>"
            + "<option value='4'>≠</option>"
            + "<select/>" +
            "<input  class='conditionvalue'  value='" + value + "'/>" + 
            "<button onclick='ConditionCancel(" + condition + "," + storyoption + ")'>取消</button>" +
            "</div>" 
            $("#conditionidselect" + condition).val(type)
        $('#Condition').append(context)

        $("#Condition option[value='"+ type +"']").attr("selected", true);
    }

    function EmptyCondition() {
        $('#Condition').empty();
        $('#Conditionoperation').empty();
    }

    //取消条件
    function ConditionCancel(condition, storyoption) {
        $("#conditionid" + condition).remove();
    }
    /////////////////////////////////end
    
    /////////////////////////////////效果
    //设置效果
    function CreateEffect(i) {
        EmptyEffect();
        for (let j = 0; j < CardObj.storyOptions[i].effect.length; j++) {
            Effect(j, i);
        }
        let string = "<button onclick='AddEffect(" + i + ")'>+</button><button onclick = 'SaveEffect(" + i + ")' > 确定</button>";
        $('#Effectoperation').append(string);

        $('#EffectModel').modal('show');
    }

    //添加效果
    function AddEffect(storyoption) {

        Effect(CardObj.storyOptions[storyoption].effect.length, storyoption)
    }

    function Effect(effect, storyoption) {
        let name = "";
        let value = "";
        let type = "";

        if (CardObj.storyOptions[storyoption].effect.length >= effect + 1) {
            name = CardObj.storyOptions[storyoption].effect[effect].Name
            value = CardObj.storyOptions[storyoption].effect[effect].Value
            type = CardObj.storyOptions[storyoption].effect[effect].Type
        }

        let context =
            "<div id='effectid" + effect + "'>" +
            "<input class='effectname' value='" + name + "'/>" +
            "<select class='effectidselect'>"
            + "<option value='0'>增加</option>"
            + "<option value='1'>减少</option>"
            + "<option value='2'>赋值</option>"
            + "<select/>" +
            "<input  class='effectvalue'  value='" + value + "'/>" +
            "<button onclick='ConditionCancel(" + effect + "," + storyoption + ")'>取消</button>" +
            "</div>"
            $("#effectidselect" + effect).val(type)
        $('#Effect').append(context)

        $("#Effect option[value='"+ type +"']").attr("selected", true);
    }

    function EmptyEffect() {
        $('#Effect').empty();
        $('#Effectoperation').empty();
    }

    //取消条件
    function EffectCancel(conditionID) {
        $("#effectid" + conditionID).remove();
    }

    function SaveEffect(storyoption) {

        let effect = [];
        $(".effectname").each(function () {
            let c = {
                Name: $(this).val(),
                Type: "",
                Value: ""
            }
            effect.push(c);

        })
        $(".effectvalue").each(function (i) {
            effect[i].Value = $(this).val();
        })
        $(".effectidselect").each(function (i) {
            effect[i].Type = $(this).val();
        })
        CardObj.storyOptions[storyoption].effect = effect;

        $('#EffectModel').modal('hide');
    }
    //////////////////////////////end




</script>

